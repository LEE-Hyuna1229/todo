클라이언트 요청 - 로드 발란서 - 오토 스켈링- 여러리전(복수개의 가용영역 존재) - 가용영역에 EC2들로 연결

# AWS 3대장
1. EC2 (Elastic Compute Cloud)
- 클라우드에서 탄력적으로 컴퓨팅 자원을 제공해주는 서비스
*특징
- Virtual Machine을 인터넷을 통해 제공해주는 서비스이기 때문에 가상 서버 서비스 라고 부른다.
- 재구성이 가능한 컴퓨팅 리소스를 가지고 있음. 인스턴스 생성 된 후에도 성능을 올리거나 내릴 수 있다는 의미.
- 하나의 인스턴스는 가상 머신 하나를 의미, 용도에 따른 다양한 인스턴스 타입을 제공함.
- 사용한 만큼만 과금되어 초기 비용이 들지 않음.

* Elastic IP 
- 다른 서비스와 유연하게 연동할 수 있는 IP주소를 의미.
- AWS 서비스가 운영되는 지역이 리전, 리전 안에는 복수개의 가용영역이 존재, 가용영역은 하나의 리전 내에 물리적으로 분리된 데이터 센터
- 이러한 각 리전에서 AWS계정과 연동된 Elastic IP를 할당 받을 수 있고, 그 IP를 EC2 인스턴스에 연결하여 접속 할 수 있음.
- 모든 AWS계정은 ELastic IP 주소가 한 리전당 5개로 제한됨.
* EBS (Elastic Block Store)
- EC2에 attach해서 쓸 수 있는 블록 스토리지
- 단일 가용영역 내에서 여러서버에 걸쳐 복제(하나에서 뻗어나가는 느낌)
- 특정 시점에 대한 볼륨 스냅샷을 만들 수 있고 스냅샷(백업 파일 의미)은 S3(객체 기반 스토리지)에 저장됨, 
복수 개의 가용영역에 걸쳐 자동으로 복제됨.

2. RDS (Relational Database Service)
- AWS에서 관계형 데이터베이스를 제공해주고, DB와 관련된 모든 작업들을 제공
*특징
- 완전 관리형 관계형 DB 서비스. 다양한 DB엔진 제공
- DB이중화(Multi-AZ) 작업, 복수개의 가용영역에 DB 인스턴스를 둠으로 이중화하는 것.
- 인스턴스 확장 쉽게 가능
- Read Replica
~ 이를 사용시 EC2에 직접 DB를 설치하고 처리해야 하는 일들이 줄어듬.
*구조
- Master DB(Primary DB) 인스턴스를 통해서는 읽기와 쓰기 작업이 이뤄짐.
- Standby DB(대기중 DB)는 데이터를 읽거나 쓰는 용도가 아닌 장애 예방 위한 DB이중화작업에 사용( Multi-AZ )= 동기복제
- R(Read Replica) 는 읽기 전용 복제본으로, 읽기만 하는 용도로 사용하는 인스턴스 =비동기 복제

3. S3 
1)객체스토리지 (Object Storage)
- 데이터를 객체로 관리함.
- 하나의 객체는 아이디, 데이터, 메타 데이터를 포함하고 있음.
*특징
- 방대한 확장성과 메타 데이터를 갖고 있음, 규모와 유연성이 필요한 어플리케이션을 구축하는 데 적합.
- 분석이나 아카이브 목적으로 사용 가능.
- 데이터를 일부분만 수정하는 것이 불가능하고 데이터 전체를 덮어써야 함.

2)파일스토리지( File Storage)
- 데이터를 파일로 관리함.
- 파일 시스템을 통해 데이터를 파일 단위로 저장하고, 파일의 일부분만 수정이 가능함.

3)블록스토리지(Block Storage)
- 데이터를 블록으로 관리함.
- 블록은 저장공간을 나누는 단위, 블록은 고유한 주소 또는 식별자를 가짐.
- 개별 가상 서버로 프로비저닝 되므로 매우 낮은 지연시간을 제공, 고성능 워크로드애 사용하기 적합.
- 파일시스템이나 메타데이터 없이 순수한 데이터 블록만을 저장함.

==> AWS에서 제공하는 클라우드 스토리지 유형 : S3(객체 스토리지),EFS(파일 스토리지), EBS(블록 스토리지)

# S3 (Simple Storage Service)
- 객체 기반의 무제한 파일 저장 스토리지로, URL 을 통해 손쉽게 파일을 공유할 수 있음.
- 99.99999% 의 내구성을 갖고 있어 안전하게 파일을 저장 할 수 있음.
- 요금은 사용한 만큼 지불하며, GB 단위로 과금됨.
- 정적 웹사이트를 S3통해 호스팅 가능.
* S3 관련 용어
- Bucket: Object를 담는 최상위 단위를 의미, 버킷의 이름과 개수는 제한이 있음.
- Object: 버킷에 담는 데이터의 단위를 의미.
- Metadata: 객체에 대한 여러가지 정보를 담고있는 데이터
- Policy: 버킷과 객체에 대한 접근을 통제하는 정보를 의미
